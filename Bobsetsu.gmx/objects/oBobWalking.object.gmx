<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBobWalkingArmed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.prevScore = 1000;
//global.prevEnemiesKilled = 4;
//global.prevTreesPlanted = 5;

//ENDGAME
//if(global.lastRoom == rFourthRoom) {
    //endGame = true;
//} else { 
endGame = false; //}
madeButton = false;

//POINTS
fade = false;
addedScore = false;

countingDone = false;
skipped = false;

scoreTree = 0;
scoreEnemies = 0;
treeCount = 0;
enemiesCount = 0;
scoreCount = 0;
startCounting = false;
alarm[9] = 120;
maxTimeBetweenTicks=10;
timeBetweenTicks = maxTimeBetweenTicks;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.25</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startCounting</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>soMainMenu</sound>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oBobWalking</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_halign(fa_center);

if(endGame) {
    //draw_sprite_ext(sSurprise, -1, 20, 25, -1, 1, 0, -1, 1);
    
    draw_sprite_ext(sSurprise, -1, 320, 25, -1, 1, 0, -1, 1);
    
    draw_sprite(sSurprise, -1, 960, 25);

    outlinedText(640, 100, "Congraturation
    This story is happy end.
    Thank you.
    
    Being the wise and courageour
    knight that you are  you feel
    strongth welling.
    In your body.
    Return to starting point.
    Challenge again!", c_black, c_white);
    
    if(!madeButton) {
        var o = instance_create(544, 600, oButton_MainMenu);
        o.image_xscale = 2;
        o.image_yscale = 2;
        madeButton = true;
    }
    exit;
}

outlinedText(640, 200, "Trees: "+string(treeCount)+ "                     "+string(scoreTree), c_black, c_white);

if(!countingDone &amp;&amp; keyboard_check_released(vk_enter)) {
    treeCount = global.prevTreesPlanted;
    scoreTree = global.prevTreesPlanted*200;
    
    enemiesCount = global.prevEnemiesKilled;
    scoreEnemies = global.prevEnemiesKilled*100;
    
    scoreCount = scoreEnemies+scoreTree;
    skipped = true;
}

if(!startCounting) exit;

if(global.prevTreesPlanted &gt; treeCount) {
    timeBetweenTicks--;
    if(timeBetweenTicks &lt;= 0) {
        treeCount++;
        scoreTree += 200;
        audio_play_sound(soDing, 1, false);
        timeBetweenTicks = maxTimeBetweenTicks;
    }
    exit;
}

outlinedText(640, 250, "Enemies Killed: "+string(enemiesCount)+ "                     "+string(scoreEnemies), c_black, c_white);
if(global.prevEnemiesKilled &gt; enemiesCount) {
    timeBetweenTicks--;
    if(timeBetweenTicks &lt;= 0) {
        enemiesCount++;
        scoreEnemies += 100;
        audio_play_sound(soDing, 1, false);
        timeBetweenTicks = maxTimeBetweenTicks;
    }
    exit;
}

fullScore = (scoreEnemies+scoreTree);
outlinedText(640, 350, "Score: "+string(round(scoreCount)), c_black, c_white);

if(!addedScore) {
    global.allTheScores += fullScore;
    addedScore = true;
}

if(fullScore &gt; scoreCount) {
    scoreCount+=fullScore/250; 
    audio_play_sound(soDing, 1, false);
    if(scoreCount &gt; fullScore) scoreCount = fullScore;
} else {
    countingDone = true;
    outlinedText(640, 450, "Press Enter to continue", c_black, c_white);

    if(skipped) {
        skipped = false;
    } else {
        if(keyboard_check_released(vk_enter)) {
            fade = true;
            instance_create(x, y, oFadeOut);
        }
    }
}
if (fade) {
    if (oFadeOut.image_alpha &gt;= 1) { 
        if(global.lastLevel == rFirstLevel)
            room_goto(rSecondLevel);
        else if(global.lastLevel == rSecondLevel)
            room_goto(rThirdLevel);
        else if(global.lastLevel == rThirdLevel)
            show_debug_message("ToFourthLvl");
            //room_goto(rFourthLevel);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
