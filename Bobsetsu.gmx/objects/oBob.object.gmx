<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBobIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BOB_SCALE = 2; // Change this number if you rescale Bob

defaultSpeed = 0.075;
image_speed = defaultSpeed;
walkSpeed = 0.075;
moveSpeed = 3000;
maxXSpeed = 4;

controls = true; // Desactivated when falling

phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oBob</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*follow = false;
startingPoint = 0
movingValue = -1

if (bobDirection == 1) {
    if (view_xview[0] &gt; x + (sprite_width/2) - 0.70 * view_wview[0]){
        follow = false;
        view_xview[0] += bobSpeed * 5;
    } else if (view_xview[0] + x + (sprite_width/2) &gt;= view_xview[0] + 0.30 * view_wview[0]) {
        follow = true;
    }
} else {
    follow = false;
}

if (follow) {
    if (bobDirection == 1) { 
        viewPos = x + (sprite_width/2) - 0.30 * view_wview[0]
        if (viewPos + view_wview[0] &gt; room_width) {
            viewPos = room_width - view_wview[0];        
        }
        view_xview[0] = viewPos;
    }
}*/

phy_speed_x = max(min(phy_speed_x, maxXSpeed), -maxXSpeed);

if (phy_speed_x &gt; 0.1 || phy_speed_x &lt; -0.1) {
    sprite_index = sBobWalking;
    walkSpeed = phy_speed_x / 10;
} else {
    sprite_index = sBobIdle;
    image_speed = defaultSpeed;
}

// Failling is bad
if(phy_speed_y &gt; 1.2){
    controls = false;
    //sprite_index = spr_Player_Falling;
    // TODO: Falling
} else {
    controls = true;
}

// Parallax Effectâ„¢
background_x[1] =  view_xview[0] + (view_wview[0] * 0.30) + (( 1 - (x + (sprite_width/2)) / room_width)) * (view_wview[0] * 0.40);
background_x[2] =  view_xview[0] - (view_wview[0] * 0.10) + (( 1 - (x + (sprite_width/2)) / room_width)) * view_wview[0];
//TODO : background_x[3] =  (( 1 - (x + (sprite_width/2)) / room_width)) * background_get_width(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCollisionBase">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Fuck you Baltimore</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (controls) {
    image_xscale = BOB_SCALE;
    image_speed = walkSpeed;
    physics_apply_force(x,y,moveSpeed,-100);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (controls) {
    image_xscale = -BOB_SCALE;
    image_speed = -walkSpeed;
    physics_apply_force(x,y,-moveSpeed,-100);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,1.75</point>
    <point>26,1.75</point>
    <point>26,32</point>
    <point>5,32</point>
  </PhysicsShapePoints>
</object>
